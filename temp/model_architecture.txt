UNet(
  (upfeature): FeatureMapBlock(
    (conv): Conv2d(2, 64, kernel_size=(1, 1), stride=(1, 1))
  )
  (contract1): ContractingBlock(
    (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1))
    (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1))
    (activation): ReLU()
    (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (contract2): ContractingBlock(
    (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
    (activation): ReLU()
    (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (contract3): ContractingBlock(
    (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))
    (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))
    (activation): ReLU()
    (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (contract4): ContractingBlock(
    (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1))
    (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))
    (activation): ReLU()
    (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (expand1): ExpandingBlock(
    (upsample): Upsample(scale_factor=2.0, mode='bilinear')
    (conv1): Conv2d(1024, 512, kernel_size=(2, 2), stride=(1, 1))
    (conv2): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1))
    (conv3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))
    (activation): ReLU()
  )
  (expand2): ExpandingBlock(
    (upsample): Upsample(scale_factor=2.0, mode='bilinear')
    (conv1): Conv2d(512, 256, kernel_size=(2, 2), stride=(1, 1))
    (conv2): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1))
    (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
    (activation): ReLU()
  )
  (expand3): ExpandingBlock(
    (upsample): Upsample(scale_factor=2.0, mode='bilinear')
    (conv1): Conv2d(256, 128, kernel_size=(2, 2), stride=(1, 1))
    (conv2): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1))
    (conv3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1))
    (activation): ReLU()
  )
  (expand4): ExpandingBlock(
    (upsample): Upsample(scale_factor=2.0, mode='bilinear')
    (conv1): Conv2d(128, 64, kernel_size=(2, 2), stride=(1, 1))
    (conv2): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1))
    (conv3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))
    (activation): ReLU()
  )
  (downfeature): FeatureMapBlock(
    (conv): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
  )
  (activation): Sigmoid()
)
